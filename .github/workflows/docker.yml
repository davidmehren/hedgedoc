name: Docker

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build dev image
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          tags: hedgedoc-dev
          target: development
          outputs: type=docker,dest=/tmp/hd-dev.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hd-dev-image
          path: /tmp/hd-dev.tar
          retention-days: 1

  sqlite-test:
    runs-on: ubuntu-latest
    needs: [build-dev]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: hd-dev-image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/hd-dev.tar
          docker run --rm hedgedoc-dev yarn run test

  sqlite-e2e:
    runs-on: ubuntu-latest
    needs: [build-dev]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: hd-dev-image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/hd-dev.tar
          docker run --rm hedgedoc-dev yarn run test:e2e

  build-prod:
    runs-on: ubuntu-latest
    needs: [sqlite-test, sqlite-e2e]
    steps:
      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/davidmehren/hedgedoc
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: docker/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
